- which XML properties are supported (see webdav.ml:create_properties)?  which can be modified by a client?
- do we implement the right HTTP error codes?
- caldav collection properties (RFC 4791 Sec 5.2)
- MKCALENDAR HTTP verb (RFC 4791 Sec 5.3)
- REPORT (from CalDAV including XML requests, answers, collation)
- tests (wir haben: icalendar/ics, webdav-xml. was fehlt: webdav/http und caldav/http)
- apple's ist umfangreich - dokumentieren was schon funktioniert und was wir denken, dass funktionieren sollte

- Access control (both WebDAV and CalDAV layers)
- service discovery of calendars
- Persistent storage
- WebUI

DONE:
- client interoperability: thunderbird! calendar.app! create and delete and rename event, todo
- slash normalisation with prefix
- timezone and date normalisation

-- 31st August 2018:

- finish tests for access control for all verbs
- implement access control for report
- automatic discovery of calendar url
- test access control with apple and thunderbird
- readonly xml props (sind live properties)
- how to add user and set acl

- client interoperability: android! create new todo lists and new calendars, use different users
- user management (config file: users, hostname, routing, etc.)
- research scope of implementing calendar sharing
- internationalisation (unicode)
- access control (WebDAV)
- report text-match
- sync-collection (WebDAV) ctag
- webUI
- recurence exdate, rdate
- calendar sharing
  - free-busy-query report
  - [locking (WebDAV)]
  - inboxes
- more tests from apple's test suite
- component_in_timerange implementations (todo/freebusy)
- report CalDAV 7.8.6 - 7.8.10
- attachments
- recurrence < daily
- freebusy in timerange / todo in timerange

- persistent storage (irmin/git?) (mirage-fs-unix works for us!)
